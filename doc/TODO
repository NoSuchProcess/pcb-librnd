1. For the upcoming release ===============================================================================
- BUG: libualloc *_api.h are not installed
- BUG: make sure tests compile with -DNDEBUG in production, else it fails in alpine packaging (-fomit-frame-pointer brings in fortify headers for some reason which fail with use-librnd #defines in config.h) [report: aron]
- 4.0.0: ABI incompatible (feature removal)
	- HID API for mbtk: pixmaps require a one-time registration and an unique ID
		- check how pcb-rnd layersel would work with this
		- canvas:
			- opengl clipping: hidgl_expose_init() may need am x,y origin; glscissor may conflict with stencil?
	- *BUG: sch-rnd critical: hid->attr_dlg_new() needs to get a void **hid_ctx_out argument so it can set hid_ctx before return; this is important because non-gtk HIDs will call back in sync during creating the dialog while core hid_dad will set hid_ctx only after this function returns (and the whole dialog is created); test: tree dialog {w t} in sch-rnd segfaults
	- CLEANUP/BUG: revise rnd_dad_tree_modify_cell() - previous cell[] should be free'd...
		- apply librnd core patch TODO.hid_dad_tree
		- make sure all callers strdup() all cells
		- user implemented ->user_free_cb() should never free cell values, the lib does that
	- BUG: camv-rnd old dep workaround: remove trunk/src/Makefile.in TODO#GENHT part and test with system installed fungw+genht and camv-rnd
	- cleanup: rnd_pref_tab_hook_s calls need hidlib arg: open_cb, board_changed_cb, meta_changed_cb
	- feature: rnd_pref_tab_hook_s ->open should deliver extra action arguments because some tabs may have optional args to specify how exactly it should be open
	- move rnd_gtk_conf_hid.plugins.hid_gtk.global_grid.sparse and "local grid" from gtk to global config,make sure all HIDs do it
	- missing event emits in apps:
		- RND_EVENT_SAVE_*: copy this from pcb-rnd to sch-rnd and camv-rnd
		- RND_EVENT_LOAD_*: copy this from pcb-rnd to sch-rnd and camv-rnd
	- remove rnd_hid_t->set_draw_faded and figure how to substitute
	- centralize mouse cursor temporary set:
		- remove rnd_hid_t->point_cusror in favor of rnd_hid_t->set_mouse_cursor named - affects pcb-rnd only
		- centralize hid API's ->busy - just set the cursor
	- scconfig: remove /local/pcb/ from templates and hooks.c on librnd side
		- remove /local/pcb from librnd central scconfig
		- for plugin control rename /local/pcb to /local/plugin/
		- search for TODO:pcb1 in *: replace with /local/rnd/ (and make sure in librnd we also set /local/rnd/ for these few, besides /local/librnd)
		- switch over librnd published templates, see TODO.template
			- use /local/mod/ for module temps instead of /local/pcb/mod
			- use /local/plugin for plugin states, like /local/pcb/hid_batch
	- multi design (multides.html):
		- problem: rnd_conf_fields
			- it hosts native (merged) config data
			- thus it needs to be per design
			- but if a new plugin registers a new field, that needs to be done in every existing design!
			- if a shared tree (project, user, sys) changes, we need to re-merge all design's rnd_conf_fields
		- mark each event [local] or [global]
		- rnd_design_t must contain:
			- real file name (realpath'd)
			- original file name (short name, as the user called it)
			- BUG: check all librnd calls to rnd_conf_get_project_conf_name(); hidlib->filename should be renamed and split to a load_name and a real_name, for project file use load_name (because of symlink designs)
		- switch over from global var rnd_conf and conf_core to per design conf field
		- implement user file name and realpath file name
		- implement project list and pointing back
		- conf: implement a way to make sure design file list is coming from the project file only
		- implement every little detail of the new project file handling as specified
		- rnd_app.single_design setting for single design mode
		- rnd_hid_parse_command_line() doesn't allow multiple filenames (but somehow it still works in sch-rnd!)
		- once multi is implemented: rnd_mainloop_interactive() shouldn't receiver a hidlib arg (assume it's already set in the gui earlier in main); check if happens in camv-rnd as well (it's single-design)
		- RND_EVENT_DESIGN_REPLACED doesn't make sense in a multi-design env; replace it with an PRE_UNLOAD event
			- double test: pcb-rnd, load board, open propedit on an object, select a row, start new board (or rather, unload board) -> propedit should close
		- multi preview widget:
			- gtk preview widget locality: add a HID API to set local bit (see r34242, TODO "multi:")
			- bind unload event and invalidate local previews' hidlib (see r34242) so they don't crash if the caller doesn't do that
			- lesstif: implement gtk's r34242 and test with sch-rnd tree view (depends on hid_ctx return fix)
		- DAD API: think over and document if ->set_val() hv.str needs to be strdupped; probably best if the lib strdups it (revise callers)
		- export API for exporting a whole project at once (instead of exporting a single sheet); pass on project ptr, not sheet ptr
	- grep the code for 4.0.0 for more (don't remove this until all items resolved as more 4.0.0 may be added)

2. For later releases ===============================================================================

3. Long term ===============================================================================

4. Low prio ===============================================================================
	- BUG: use libualloc for rtree stack instead of static allocation [report: Vuokko]
	- BUG: hid_lesstif potential bug: bug_files/TODO/lesstif.txt [report: Fuz]
	- bitmap object export in png, ps, eps, svg
	- FEATURE: font -v2 support:
		- baseline?
		- optional kerning table: a single dx value for combiation of 2 glyphs; second glyph usually needs to moved in the negative direction
		- save and load ->height, check calls to rnd_font_fix_v1() and don't call it if ->height is loaded
		- unicode translation table so that the upper 127 chars can be used for mu, degree and similar

5. unsorted ===============================================================================
	- lesstif: vertical text, truncated text support
