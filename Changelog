librnd 2.3.0 (r32453)
~~~~~~~~~~~~~~~~~~~~~

	[build]
		-Del: tests left over from pcb-rnd
		-Del: remove pcb-rnd leftovers from Makefiles
		-Move: scconfig lib from scconfig/ to src/ so it is part of the single install subtree for reuse by apps
		-Move: gen_conf.sh to scconfig (with installation) so apps can reuse it
		-Move: scconfig templates from scconfig to src/scconfig as it's becoming installable for apps to reuse
		-Cleanup: detach building the plugins from $(PLUDGID) so the temporary in-pcb-rnd build still works
		-Cleanup: move src_plugins to src/plugins for easier svn externs and consistency with the installation later
		-Cleanup: plugin headers should be #included as <plugins/*.h> for portabilirty
		-Fix: make sure make dep generates the dependencies with full relative path (requires an extra step of 'sed' to work around gcc's shortcomings)
		-Fix: broken installation of buildin.hidlib.h
		-Fix: missing dependency on test-rnd executable to buildin.hidlib.h
		-Fix: use the same path notation for buildin.hidlib.h dep as for the build rule
		-Fix: mark all plugins part of $hidlib
		-Change: install doc and data in /librnd, not in /pcb-rnd
		-Add: #define LIBRND_ROOT so configure compiles
		-Add: install minimal libfungw headers and genht headers (apps will need these)
		-Add: make map_plugins.sh more generic so ringdove apps can reuse it without having to copy it
		-Add: install map_plugins.sh so apps don't need to copy it
		-Add: temporary branch in the internal conf generator template for pcb-rnd, as long as it needs to compile librnd locally
		-Add: set librnd plugin root from the Makefile so plugins are found

	[core]
		-Cleanup: dedoxygen comments
		-Cleanup: code formatting
		-Del: RND_BOX_ROTATE_CW() - no user
		-Del: box direction flags and macros - required by pcb-rnd autorouter only
		-Del: pcb-rnd related docs
		-Del: rnd_r_end() - useless dummy
		-Del: remove vcs comment mentioning multiple crosshair shapes from the copyright banner - that piece of code got removed
		-Fix: RND_ACT_CALL_C() needs to get hidlib as first argument and set up the call properly because action code depend on the hidlib context pointer
		-Fix: can't pass function pointer in low level C action call because there's no place the temporary func wrapper could be allocated
		-Fix: indicate error on action not found in parse action also in the case of action with arguments
		-Fix: str2coord for action arg conversion: do not crash on empty coord
		-Fix: don't crash if menu file did not parse
		-Fix: hid uninit sequence: keep hid structs until after pup unload so plugin uninit cals won't address into already free'd memory
		-Fix: don't crash if rnd_tool_get() is called before tool init
		-Fix: DAD: coord spin: accept 0.00 as legal value even without unit (special case)
		-Add: global var indicating if librnd is running the main loop
		-Add: generate an event when main loop state changes
		-Add: rnd_printf %mw prints an fgw_arg_t; prints coord with units
		-Add: MenuDebug() action with a command to save the menu
		-Add: MenuDebug(force-enable) for menu debugging with the batch HID

	[hid_gtk2_gdk]
		-Fix: limit poly draw coords to 32767, gdk seems to misbehave with larger coordinates

	[loghid]
		-Fix: mark plugin a hidlib plugin
		-Fix: preserve override_render bit after setting up the delegation
		-Add: set HID bit 'override render' to capture rendering calls
