print [@

#include <librnd/plugins/lib_hid_gl/draw.h>

extern hidgl_draw_t hidgl_draw_direct;
extern hidgl_draw_t hidgl_draw_vao;
extern hidgl_draw_t hidgl_draw_error;

static hidgl_draw_t *hidgl_draws;

#define DRAW_INSERT(drw) \
	do { \
		drw.next = hidgl_draws; \
		hidgl_draws = &drw; \
	} while(0)

RND_INLINE void hidgl_draw_init_(void)
{
	static int inited = 0;

	if (inited)
		return;

	DRAW_INSERT(hidgl_draw_vao);
	DRAW_INSERT(hidgl_draw_direct);

	inited = 1;
}

/* return the first draw implementation that would work with current opengl */
RND_INLINE const hidgl_draw_t *hidgl_find_draw(const RND_CFT_LIST *pref)
{
	hidgl_draw_t *d;

	hidgl_draw_init_();

	if ((pref != NULL) && (rnd_conflist_length(pref) > 0)) {
		/* order is coming from preference */
		gdl_iterator_t it;
		rnd_conf_listitem_t *p;

		rnd_conflist_foreach(pref, &it, p) {
			for(d = hidgl_draws; d != NULL; d = d->next)
				if (strcmp(d->name, p->payload) == 0)
					if (d->init() == 0) return d;
		}
	}
	else {
		/* fallback: try them one by one, in order, if there was no preference */
		for(d = hidgl_draws; d != NULL; d = d->next)
			if (d->init() == 0) return d;
	}

	/* final fallback: did not find anything working  */
	if (hidgl_draw_error.init() == 0) return &hidgl_draw_error;
	return NULL;
}
@]
